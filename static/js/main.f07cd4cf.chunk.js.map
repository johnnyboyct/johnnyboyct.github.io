{"version":3,"sources":["sections/Profile.js","sections/About.js","sections/WorkItem.js","sections/Work.js","sections/Skills.js","sections/Education.js","App.js","serviceWorker.js","index.js"],"names":["Profile","props","profileData","_jsxs","children","_jsx","className","role","src","picture","width","alt","name","label","location","city","region","countryCode","href","concat","email","profiles","username","About","aboutData","WorkItem","s","workItemData","getHighlights","highlights","map","item","index","position","company","startdate","startDate","enddate","endDate","getWorkDates","summary","split","idx","dangerouslySetInnerHTML","__html","input","e","document","createElement","innerHTML","childNodes","length","nodeValue","htmlDecode","replace","Work","workData","workItems","forEach","val","push","getWorkExperience","Skills","getSkills","skillsData","keywords","Education","getEducation","educationData","studyType","area","institution","App","_props$jsonObj","jsonObj","basics","work","skills","education","Boolean","window","hostname","match","json","require","ReactDOM","render","React","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f07cd4cf.chunk.js","sourcesContent":["import React from 'react';\nimport { object } from 'prop-types';\n\nconst Profile = props => {\n  const { profileData} = props\n  return (\n    <div>\n      <div className=\"profileImg\"><img role=\"presentation\" className=\"img-circle center-block\" src={profileData.picture} width=\"200\" alt=\"profile pic\" /></div>\n      <h1 className=\"text-center\">{profileData.name}</h1>\n      <h2 className=\"text-center\">{profileData.label}</h2>\n      <div className=\"divider\"></div>\n      <ul className=\"contact-links text-center\">\n        <li><i className=\"fa fa-location-arrow\"></i>{profileData.location.city}, {profileData.location.region}, {profileData.location.countryCode}</li>\n        <li><i className=\"fa fa-envelope\"></i><a href={`mailto:${profileData.email}`}>{profileData.email}</a></li>\n      </ul>\n      <div className=\"divider\"></div>\n      <ul className=\"profileLinks text-center\">\n        <li><a className=\"fa fa-twitter fa-2x\" href={'https://twitter.com/'+profileData.profiles[0].username}><span className=\"sr-only\">twitter</span></a></li>\n        <li><a className=\"fa fa-github fa-2x\" href={'https://github.com/'+profileData.profiles[1].username}><span className=\"sr-only\">github</span></a></li>\n      </ul>\n\n    </div>\n  )\n};\n\nProfile.propTypes = {\n  profileData: object.isRequired\n}\n\nexport default Profile;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst About = props => {\n  const { aboutData } = props\n  return (\n    <section className=\"about\">\n      <h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-user\"></i> About</h2>\n      <p>{aboutData}</p>\n    </section>\n  );\n};\n\nAbout.propTypes = {\n  aboutData: string.isRequired\n}\n\nexport default About;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nconst WorkItem = props => {\n  const { workItemData } = props\n  const getWorkDates = () => {\n    const startdate = workItemData.startDate;\n    let enddate = null;\n    if (workItemData.endDate !== '') {\n      enddate = workItemData.endDate;\n    } else {\n      enddate = 'Present';\n    }\n\n    return <span className='startdate'>{startdate} - {enddate}</span>\n  }\n\n  const getHighlights = workItemData.highlights.map(function (item, index) {\n    return (<li key={index}>{item}</li>)\n  });\n\n  const formatSummary = (s) => {\n    return s.replace(/\\n/g, '<br />');\n  }\n  const htmlDecode = (input) => {\n    var e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n  }\n\n  return (\n    <div className=\"workItem\">\n      <h3>{workItemData.position}, <span>{workItemData.company}</span></h3>\n      <p className=\"workDates\">{getWorkDates()}</p>\n      <p>{workItemData.summary.split(\"\\n\").map(function(item, idx) {\n        return (\n            <span key={idx}>\n                {item}\n                <br/>\n            </span>\n         )\n    })}</p>\n      <div dangerouslySetInnerHTML={{ __html: htmlDecode(formatSummary(workItemData.summary)) }} />\n\n      <ul>{getHighlights}</ul>\n    </div>\n  )\n};\n\nWorkItem.propTypes = {\n  workItemData: object.isRequired\n}\n\nexport default WorkItem;\n","import React from 'react';\nimport WorkItem from './WorkItem';\nimport { arrayOf, object } from 'prop-types';\n\nconst Work = props => {\n  const getWorkExperience = () => {\n    const { workData } = props;\n    const workItems = [];\n    workData.forEach((val, index) => {\n      workItems.push(<WorkItem key={index} workItemData={val}/>);\n    })\n    return workItems;\n  }\n\n  return (\n    <section className=\"work\">\n      <h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-building\"></i> Work experience</h2>\n      {getWorkExperience()}\n    </section>\n  );\n};\n\nWork.propTypes = {\n  workData: arrayOf(object)\n}\n\nexport default Work;\n","import React from 'react';\nimport { arrayOf, object } from 'prop-types';\n\nconst Skills = props => {\n  const { skillsData } = props\n    const getSkills = skillsData[0].keywords.map(function(item, index) {\n      return (<li key={index}><span className=\"label label-success\">{item}</span></li>)\n    });\n\n  \treturn (\n  \t  <section className=\"skills\">\n        <h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-code\"></i> Skills</h2>\n        <ul className=\"skills-list\">{getSkills}</ul>\n      </section>\n  \t)\n};\n\nSkills.propTypes = {\n  skillsData: arrayOf(object).isRequired\n}\n\nexport default Skills;\n","import React from 'react';\nimport { arrayOf, object } from 'prop-types';\n\nconst Education = props => {\n\tconst { educationData } = props;\n\tconst getEducation = educationData.map(function(item, index) {\n\t\treturn (\n\t\t\t<div key={index}>\n\t\t\t\t<h3>{item.studyType} {item.area}</h3>\n\t\t\t\t<h4>{item.institution}</h4>\n\t\t\t\t<p>Studied: {item.startDate} - {item.endDate}</p>\n\t\t\t</div>\n\t\t\t)\n\t});\n\n\treturn (\n\t\t<section className=\"education\">\n\t\t\t<h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-mortar-board\"></i> Education</h2>\n\t\t\t{getEducation}\n\t\t</section>\n\t)\n};\n\nEducation.propTypes = {\n\teducationData: arrayOf(object).isRequired\n}\n\nexport default Education;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport Profile from './sections/Profile';\nimport About from './sections/About';\nimport Work from './sections/Work';\nimport Skills from './sections/Skills';\nimport Education from './sections/Education';\nimport './App.css'\n\nconst App = props => {\n  const { jsonObj: { basics, work, skills, education } } = props\n  const profileData = basics;\n  const aboutData = profileData.summary;\n  const workData = work;\n  const skillsData = skills;\n  const educationData = education;\n  return (\n    <div className=\"container\">\n      <aside>\n        <div className=\"inner\">\n          <Profile profileData={profileData} />\n        </div>\n      </aside>\n      <main>\n        <div className=\"inner\">\n          <About aboutData={aboutData} />\n          <Work workData={workData} />\n          <Skills skillsData={skillsData} />\n          <Education educationData={educationData} />\n        </div>\n      </main>\n    </div>\n    )\n};\n\nApp.propTypes = {\n    jsonObj: object.isRequired\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst json = require('./resume.json'); // load resume file\n\nReactDOM.render(\n  <React.StrictMode>\n    <App jsonObj={json} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}