{"version":3,"sources":["images/name.jpg","sections/About.js","sections/Education.js","sections/Profile.js","sections/Skills.js","sections/WorkItem.js","sections/Work.js","App.js","serviceWorker.js","index.js"],"names":["About","props","aboutData","className","Education","getEducation","educationData","map","item","index","studyType","area","institution","startDate","endDate","Profile","profileData","perspective","glareEnable","glareMaxOpacity","scale","role","src","picture","width","alt","name","label","location","city","region","countryCode","href","email","profiles","username","Skills","getSkills","skillsData","keywords","WorkItem","workItemData","getHighlights","highlights","position","company","startdate","enddate","getWorkDates","summary","Work","workData","workItems","forEach","val","push","getWorkExperience","round","n","step","Math","ceil","particleOptions","filter","x","y","pixel","image","get","r","g","b","color","a","radius","mass","friction","initialPosition","canvasDimensions","Vector","height","motionForce","forces","disturbance","App","jsonObj","basics","work","skills","education","id","i","Number","entropy","maxParticles","mouseMoveForce","touchMoveForce","backgroundColor","theme","brightness","contrast","sepia","type","bg","Boolean","window","hostname","match","json","require","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53adf216.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/name.a562b98a.jpg\";","import React from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nconst About = props => {\r\n  const { aboutData } = props\r\n  return (\r\n    <section className=\"about\">\r\n      <h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-user\"></i> About</h2>\r\n      <p>{aboutData}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  aboutData: string.isRequired\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { arrayOf, object } from 'prop-types';\r\n\r\nconst Education = props => {\r\n\tconst { educationData } = props;\r\n\tconst getEducation = educationData.map(function(item, index) {\r\n\t\treturn (\r\n\t\t\t<div key={index}>\r\n\t\t\t\t<h3>{item.studyType} {item.area}</h3>\r\n\t\t\t\t<h4>{item.institution}</h4>\r\n\t\t\t\t<p>Studied: {item.startDate} - {item.endDate}</p>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t});\r\n\r\n\treturn (\r\n\t\t<section className=\"education\">\r\n\t\t\t<h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-mortar-board\"></i> Education</h2>\r\n\t\t\t{getEducation}\r\n\t\t</section>\r\n\t)\r\n};\r\n\r\nEducation.propTypes = {\r\n\teducationData: arrayOf(object).isRequired\r\n}\r\n\r\nexport default Education;\r\n","import { object } from \"prop-types\";\r\nimport React from \"react\";\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\nconst Profile = (props) => {\r\n  const { profileData } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profileImg\">\r\n        <Tilt\r\n          className=\"parallax-effect-glare-scale\"\r\n          perspective={500}\r\n          glareEnable={true}\r\n          glareMaxOpacity={0.45}\r\n          scale={1.02}\r\n        >\r\n          <div className=\"inner-element\">\r\n\r\n            <img\r\n              role=\"presentation\"\r\n              className=\"img-circle center-block\"\r\n              src={profileData.picture}\r\n              width=\"300\"\r\n              alt=\"profile pic\"\r\n            />\r\n            <div className=\"name\">\r\n              <h1 className=\"text-center neon-text\">{profileData.name}</h1>\r\n\r\n            </div>\r\n          </div>\r\n        </Tilt>\r\n\r\n\r\n      </div>\r\n\r\n      \r\n      <h2 className=\"text-center \">{profileData.label}</h2>\r\n      <div className=\"divider\"></div>\r\n      <ul className=\"contact-links text-center\">\r\n        <li>\r\n          <i className=\"fa fa-location-arrow\"></i>\r\n          {profileData.location.city}, {profileData.location.region},{\" \"}\r\n          {profileData.location.countryCode}\r\n        </li>\r\n        <li>\r\n          <i className=\"fa fa-envelope\"></i>\r\n          <a href={`mailto:${profileData.email}`}>{profileData.email}</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"divider\"></div>\r\n      <ul className=\"profileLinks text-center\">\r\n        <li>\r\n\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"fa fa-github fa-2x\"\r\n            href={\"https://github.com/\" + profileData.profiles[1].username}\r\n          >\r\n            <span className=\"sr-only\">github</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"divider\"></div>\r\n      <p className=\"small-text\">\r\n        I built this site with{\" \"}\r\n        <a href=\"https://facebook.github.io/react/\">React</a>\r\n        components and a{\" \"}\r\n        <a href=\"https://jsonresume.org/schema/\">JSON Resume Schema</a>. The\r\n        full source code can be found in\r\n        <a href=\"https://github.com/johnnyboyct/jm-resume\">my Github repo</a>.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  profileData: object.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { arrayOf, object } from 'prop-types';\r\n\r\nconst Skills = props => {\r\n  const { skillsData } = props\r\n    const getSkills = skillsData[0].keywords.map(function(item, index) {\r\n      return (<li key={index}><span className=\"label label-success\">{item}</span></li>)\r\n    });\r\n\r\n  \treturn (\r\n  \t  <section className=\"skills\">\r\n        <h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-code\"></i> Skills</h2>\r\n        <ul className=\"skills-list\">{getSkills}</ul>\r\n      </section>\r\n  \t)\r\n};\r\n\r\nSkills.propTypes = {\r\n  skillsData: arrayOf(object).isRequired\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { object } from 'prop-types';\r\n\r\nconst WorkItem = props => {\r\n  const { workItemData } = props\r\n  const getWorkDates = () => {\r\n    const startdate = workItemData.startDate;\r\n    let enddate = null;\r\n    if (workItemData.endDate !== '') {\r\n      enddate = workItemData.endDate;\r\n    } else {\r\n      enddate = 'Present';\r\n    }\r\n\r\n    return <span className='startdate'>{startdate} - {enddate}</span>\r\n  }\r\n\r\n  const getHighlights = workItemData.highlights.map(function(item, index) {\r\n    return (<li key={index}>{item}</li>)\r\n  });\r\n\r\n  return (\r\n    <div className=\"workItem\">\r\n      <h3>{workItemData.position}, <span>{workItemData.company}</span></h3>\r\n      <p className=\"workDates\">{getWorkDates()}</p>\r\n      <p>{workItemData.summary}</p>\r\n      <ul>{getHighlights}</ul>\r\n    </div>\r\n  )\r\n};\r\n\r\nWorkItem.propTypes = {\r\n  workItemData: object.isRequired\r\n}\r\n\r\nexport default WorkItem;\r\n","import React from 'react';\r\nimport WorkItem from './WorkItem';\r\nimport { arrayOf, object } from 'prop-types';\r\n\r\nconst Work = props => {\r\n  const getWorkExperience = () => {\r\n    const { workData } = props;\r\n    const workItems = [];\r\n    workData.forEach((val, index) => {\r\n      workItems.push(<WorkItem key={index} workItemData={val}/>);\r\n    })\r\n    return workItems;\r\n  }\r\n\r\n  return (\r\n    <section className=\"work\">\r\n      <h2 className=\"text-uppercase\"><i className=\"fa fa-lg fa-building\"></i> Work experience</h2>\r\n      {getWorkExperience()}\r\n    </section>\r\n  );\r\n};\r\n\r\nWork.propTypes = {\r\n  workData: arrayOf(object)\r\n}\r\n\r\nexport default Work;\r\n","import ParticlesBg from 'particles-bg';\r\nimport { object } from 'prop-types';\r\nimport React from 'react';\r\nimport Darkreader from 'react-darkreader';\r\nimport ParticleImage, {\r\n  forces,\r\n  ParticleForce, ParticleOptions,\r\n  Vector\r\n} from \"react-particle-image\";\r\nimport './App.css';\r\nimport i from './images/name.jpg';\r\nimport About from './sections/About';\r\nimport Education from './sections/Education';\r\nimport Profile from './sections/Profile';\r\nimport Skills from './sections/Skills';\r\nimport Work from './sections/Work';\r\n// Round number up to nearest step for better canvas performance\r\nconst round = (n: number, step = 20) => Math.ceil(n / step) * step;\r\n\r\n// Try making me lower to see how performance degrades\r\nconst STEP = 30;\r\n\r\nconst particleOptions: ParticleOptions = {\r\n  filter: ({ x, y, image }) => {\r\n    // Get pixel\r\n    const pixel = image.get(x, y);\r\n    // Make a particle for this pixel if magnitude < 200 (range 0-255)\r\n    const magnitude = (pixel.r + pixel.g + pixel.b) / 3;\r\n    return magnitude < 200;\r\n  },\r\n  color: ({ x, y, image }) => {\r\n    const pixel = image.get(x, y);\r\n    // Canvases are much more performant when painting as few colors as possible.\r\n    // Use color of pixel as color for particle however round to nearest 30\r\n    // to decrease the number of unique colors painted on the canvas.\r\n    // You'll notice if we remove this rounding, the framerate will slow down a lot.\r\n    return `rgba(\r\n      ${round(pixel.r, STEP)}, \r\n      ${round(pixel.g, STEP)}, \r\n      ${round(pixel.b, STEP)}, \r\n      ${round(pixel.a, STEP) / 255}\r\n    )`;\r\n  },\r\n  radius: ({ x, y, image }) => {\r\n    const pixel = image.get(x, y);\r\n    const magnitude = (pixel.r + pixel.g + pixel.b) / 3;\r\n    // Lighter colors will have smaller radius\r\n    return 3 - (magnitude / 255) * .5;\r\n  },\r\n  mass: () => 40,\r\n  friction: () => 0.15,\r\n  initialPosition: ({ canvasDimensions }) => {\r\n    return new Vector(canvasDimensions.width / 2, canvasDimensions.height / 2);\r\n  }\r\n};\r\n\r\nconst motionForce = (x: number, y: number): ParticleForce => {\r\n  return forces.disturbance(x, y, 7);\r\n};\r\n\r\nconst App = props => {\r\n  const { jsonObj: { basics, work, skills, education } } = props\r\n  const profileData = basics;\r\n  const aboutData = profileData.summary;\r\n  const workData = work;\r\n  const skillsData = skills;\r\n  const educationData = education;\r\n  // console.log(profileData)\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <ParticleImage\r\n        id=\"pName\"\r\n        src={i}\r\n        width={Number(800)}\r\n        height={Number(90)}\r\n        scale={0.75}\r\n        entropy={30}\r\n        maxParticles={4000}\r\n        particleOptions={particleOptions}\r\n        mouseMoveForce={motionForce}\r\n        touchMoveForce={motionForce}\r\n        backgroundColor=\"none\"\r\n      />\r\n      <div className=\"container\">\r\n\r\n\r\n        <aside>\r\n          <div className=\"inner\">\r\n            <Profile profileData={profileData} />\r\n            <Darkreader theme={{\r\n              brightness: 100,\r\n              contrast: 90,\r\n              sepia: 10,\r\n            }} />\r\n          </div>\r\n        </aside>\r\n        <main>\r\n\r\n          <div className=\"inner\">\r\n            <About aboutData={aboutData} />\r\n            <Work workData={workData} />\r\n            <Skills skillsData={skillsData} />\r\n            <Education educationData={educationData} />\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <ParticlesBg  id=\"ParticlesBg\" type=\"cobweb\" bg={true} color=\"#46cc46\" />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nApp.propTypes = {\r\n  jsonObj: object.isRequired\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nconst json = require('./resume.json'); // load resume file\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App jsonObj={json} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}